""""""""""""""""""""""""""快捷键设置"""""""""""""""""""""""
if has("unix")
    map ;c :e ~/_vimrc<CR>
elseif has("windows")
    map ;c :e $VIM/_vimrc<CR>
endif

map <F12> :source %:p<CR>
map ;b ^
map ;e $

map ;q :q<cr>
map ;Q :quitall<CR>
map ;w :w<CR>
map ;lw <C-W>l
map ;hw <C-W>h
map ;kw <C-W>k
map ;jw <C-W>j
map gl :b#<CR>
map gL <C-W>vgl
map gY gygL

map gr viw;ny:grep <C-r>n *<CR><CR><C-o>:cw<CR>
vmap gr ;ny:grep <C-r>n *<CR><CR><C-o>:cw<CR>
map gnr viw;ny:grep <C-r>n ../* -r<CR><CR><C-o>:cw<CR>
vmap gnr ;ny:grep <C-r>n ../* -r<CR><CR><C-o>:cw<CR>

map ;/ :nohls<CR>
map ; "
noremap ' ;

map <C-l> :tabnext<CR>
map <C-h> :tabprevious<CR>

func! Toggle_relative_nu()
    if getbufvar('', "&rnu") == 0
        set relativenumber
    else
        set norelativenumber
    endif
endfunc
map <F2> :call Toggle_relative_nu()<CR>

""""""""""""""""""""""""""MyPlugin"""""""""""""""""""""""
map <F11> :e $HOME/.vim/vimfiles/bundle/cppenv/autoload/cppenv.vim<CR>
map <F10> :call ag#toggleDebug()<CR>


""""""""""""""""""""""""""Make"""""""""""""""""""""""

" python
autocmd BufNewFile,BufRead *.py map <F5> :! python %:p<CR>

" C
autocmd BufNewFile,BufRead *.c map <F7> :! gcc %:p -o out.exe -g -pthread<CR>
autocmd BufNewFile,BufRead *.c map <F5> <F7>:! %:p:h/out.exe<CR>

" C++
autocmd BufNewFile,BufRead *.cpp map <F7> :! g++ -std=c++0x %:p -o out.exe -g -pthread<CR>
autocmd BufNewFile,BufRead *.cpp map <F5> <F7>:! %:p:h/out.exe<CR>
autocmd BufNewFile,BufRead *.cpp map <F6> :! g++ -std=c++0x %:p -o out.exe -g -Wl,--whole-archive -lpthread -Wl,--no-whole-archive -static<CR>:! %:p:h/out.exe<CR>
autocmd BufNewFile,BufRead *.cpp map <F8> :! g++ -std=c++0x %:p -o out.exe -g -lboost_system -lboost_thread -pthread -static-libstdc++<CR>:! %:p:h/out.exe<CR>
autocmd BufNewFile,BufRead *.cpp map mkco :! g++ -std=c++0x %:p -o out.exe -g -llibgo -lboost_thread -lboost_system -ldl -pthread -static-libstdc++<CR>:! %:p:h/out.exe<CR>
autocmd BufNewFile,BufRead *.cpp map mkcob :! g++ -std=c++0x %:p -o out.exe -g -llibgo -lboost_coroutine -lboost_context -lboost_thread -lboost_system -ldl -pthread -static-libstdc++<CR>:! %:p:h/out.exe<CR>

" go
autocmd BufNewFile,BufRead *.go map <F7> :! go build %<CR>
autocmd BufNewFile,BufRead *.go map <F5> :! go run %<CR>

" java
autocmd BufNewFile,BufRead *.java map <F7> :! javac %<CR>
autocmd BufNewFile,BufRead *.java map <F5> <F7>:! java %:r<CR>

"set makeef=compile_error.log
"set makeprg=make.exe
"set shellpipe=

""""""""""""""""""""""""""VimEnv"""""""""""""""""""""""
set path+=/usr/include,/usr/include/linux,/usr/include/c++/4.8,/usr/include/x86_64-linux-gnu,/usr/include/x86_64-linux-gnu/c++/4.8,/usr/include/i386-linux-gnu,/usr/include/i386-linux-gnu/c++/4.8,/usr/local/include

""""""""""""""""""""""""""Style"""""""""""""""""""""""
color evening
"color torte
filetype on
filetype indent on
filetype plugin on
syntax on
syntax enable
set incsearch
"set ignorecase
set smartcase
set nocompatible
set wildmenu
set number
set hlsearch
set nowrap
set autochdir
set fo-=ro

"折叠
set nofoldenable
set foldmethod=syntax
set foldlevel=1

"tab
set expandtab "Tab转换成空格
set tabstop=4
set shiftwidth=4
set softtabstop=4

set gcr=a:block-blinkon0 "禁止光标闪烁
set guioptions-=m
set guioptions-=T
set laststatus=2
set guifont=Courier\ New:h12
set encoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,gbk ",utf-16,gb2312 "可识别文件编码

set cc=80
hi colorcolumn ctermbg=9 guibg=blue
set backspace=indent,eol,start

""""""""""""""""""""""""""Plugin Config"""""""""""""""""""""""

" Vundle
set nocompatible
filetype off
set rtp+=$VIM/vimfiles/bundle/Vundle.vim,$VIM/vimfiles/bundle
set rtp+=$HOME/.vim/vimfiles/bundle/Vundle.vim,$HOME/.vim/vimfiles/bundle
call vundle#begin("$HOME/.vim/vimfiles/bundle")
Plugin 'https://gitee.com/yyzybb537/Vundle.vim.git', {'name': 'Vundle.vim'}
Plugin 'majutsushi/tagbar'
Plugin 'yyzybb/cppenv'
Plugin 'yyzybb/quickfixer'
Plugin 'yyzybb/auto_govender'
Plugin 'https://gitee.com/yyzybb537/vim-airline.git'
Plugin 'https://gitee.com/yyzybb537/nerdtree.git'
Plugin 'https://gitee.com/yyzybb537/taglist.vim.git', {'name': 'taglist.vim'}
Plugin 'https://gitee.com/yyzybb537/ultisnips.git'
Plugin 'https://gitee.com/yyzybb537/vim-snippets.git'
Plugin 'https://gitee.com/yyzybb537/vim-go.git'
Plugin 'https://gitee.com/yyzybb537/vim-toml.git'
Plugin 'https://gitee.com/yyzybb537/tabular.git'
Plugin 'https://gitee.com/yyzybb537/vim-markdown.git'
Plugin 'https://gitee.com/yyzybb537/YouCompleteMe.git'

"Plugin 'godlygeek/tabular'
"Plugin 'plasticboy/vim-markdown'
"Plugin 'suan/vim-instant-markdown'

"Plugin 'gmarik/Vundle.vim'
"Plugin 'bling/vim-airline'
"Plugin 'scrooloose/nerdtree'
"Plugin 'vim-scripts/taglist.vim'
"Plugin 'yyzybb/cppenv'
"Plugin 'yyzybb/quickfixer'
"Plugin 'Valloric/YouCompleteMe'
"Plugin 'SirVer/ultisnips'
"Plugin 'honza/vim-snippets'
"Plugin 'fatih/vim-go'
"Plugin 'cespare/vim-toml'
call vundle#end()
filetype plugin indent on

" YouCompleteMe
"let g:ycm_log_level = 'info'
"注释和字符串中的文字也会被收入补全
let g:ycm_collect_identifiers_from_comments_and_strings = 0
" 禁止缓存匹配项,每次都重新生成匹配项
let g:ycm_cache_omnifunc=1
" 开启语义补全
let g:ycm_seed_identifiers_with_syntax=1	
"在注释输入中也能补全
let g:ycm_complete_in_comments = 1
"在字符串输入中也能补全
let g:ycm_complete_in_strings = 1

let g:ycm_error_symbol = '>>'
let g:ycm_warning_symbol = '>*'
let g:ycm_show_diagnostics_ui = 0
let g:ycm_global_ycm_extra_conf = '/data1/home/yuyangzi/.ycm_extra_conf.py'
nnoremap gy :YcmCompleter GoToDefinitionElseDeclaration<CR>
nnoremap gu :YcmCompleter GoToImprecise<CR>
nmap <F4> :YcmDiags<CR>
set completeopt=menuone

" UltiSnips
let g:UltiSnipsUsePythonVersion = 2
let g:UltiSnipsExpandTrigger="<c-j>"
let g:UltiSnipsJumpForwardTrigger="<c-j>"
let g:UltiSnipsJumpBackwardTrigger="<c-i>"
let g:UltiSnipsEditSplit="vertical"
let g:UltiSnipsSnippetDirectories=["UltiSnips","cppenv/snippets"]

" airline
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_sep = ' '
let g:airline#extensions#tabline#left_alt_sep = '|'

" nerdtree
map <F3> :NERDTreeToggle<CR>

" tagbar
let g:tagbar_left = 1
map TL :TagbarToggle<CR>

" taglist
"let Tlist_Show_One_File=1
"let Tlist_Exit_OnlyWindow=1
"map TL :Tlist<CR>
"map TU :TlistUpdate<CR>

" cppenv
au BufNewFile,BufRead * execute cppenv#dummy()
au BufNewFile,BufRead *.h,*.hpp,*.inl,*.ipp,*.cpp,*.c,*.cc,*.go,*.proto,*.jce execute cppenv#infect()
au BufNewFile,BufRead *.h,*.hpp,*.inl,*.ipp,*.cpp,*.c,*.cc,*.go,*.proto,*.jce set fo-=ro

" auto_govender
au BufNewFile,BufRead *.go execute ag#dummy()
au BufWritePost *.go call ag#onSave()

" vim-go
let g:go_fmt_autosave = 0
let g:go_def_mapping_enabled = 0
let g:go_bin_path = '/tmp/bin'
"let g:go_highlight_space_tab_error = 0
let g:go_highlight_trailing_whitespace_error = 0
au BufNewFile,BufRead *.go nnoremap gy :GoDef<CR>
au BufNewFile,BufRead *.go nnoremap <F4> :GoErrCheck<CR>

" tags
set tags=tags,./tags,/usr/include/tags
"set tags+=/home/yyz/C/Bex/Bex/tags,/home/yyz/C/Bex/boost/include/tags

" vim-markdown
let g:vim_markdown_folding_disabled = 1
let g:vim_markdown_folding_style_pythonic = 1
let g:vim_markdown_override_foldtext = 0
let g:vim_markdown_folding_level = 6
let g:vim_markdown_no_default_key_mappings = 1
let g:vim_markdown_toc_autofit = 1
let g:vim_markdown_emphasis_multiline = 0
set conceallevel=2
let g:vim_markdown_conceal = 0
let g:tex_conceal = ""
let g:vim_markdown_math = 1
let g:vim_markdown_fenced_languages = ['csharp=cs', 'go=golang', 'c++=cpp', 'viml=vim', 'bash=sh', 'ini=dosini']
let g:vim_markdown_math = 1
let g:vim_markdown_frontmatter = 1
let g:vim_markdown_toml_frontmatter = 1
let g:vim_markdown_json_frontmatter = 1
let g:vim_markdown_new_list_item_indent = 2
let g:vim_markdown_no_extensions_in_markdown = 1
let g:vim_markdown_autowrite = 1

"" vim-instant-markdown
"let g:instant_markdown_slow = 1
"let g:instant_markdown_autostart = 0
"let g:instant_markdown_open_to_the_world = 1
"let g:instant_markdown_allow_unsafe_content = 1
"let g:instant_markdown_allow_external_content = 0

" gvim on windows
if !has("unix")
    source $VIMRUNTIME/vimrc_example.vim
    source $VIMRUNTIME/mswin.vim
    behave mswin
endif

set nobackup
set noswapfile
set undofile
set undodir=$VIM/vimfiles/undodir
set undolevels=100
set sel=inclusive
